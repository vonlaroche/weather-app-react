{"version":3,"sources":["assets/sun.png","assets/rain.png","assets/cloudy.png","components/DayLabel/DayLabel.js","components/WeatherImage/WeatherImage.js","components/LowTemp/LowTemp.js","components/HighTemp/HighTemp.js","containers/Temperatures/Temperatures.js","containers/MainCard/MainCard.js","components/SearchCityForm/SearchCityForm.js","components/ErrorMessage/ErrorMessage.js","containers/MainContainer/MainContainer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","DayLabel","props","react_default","a","createElement","className","day","WeatherImage","src","imageSrc","alt","LowTemp","lowTemp","HighTemp","highTemp","Temperatures","components_HighTemp_HighTemp","components_LowTemp_LowTemp","MainCard","components_DayLabel_DayLabel","this","components_WeatherImage_WeatherImage","containers_Temperatures_Temperatures","Component","SearchCityForm","onSubmit","onSubmitCityForm","autocomplete","for","type","value","city","id","placeholder","onChange","handleInputChange","ErrorMessage","MainContainer","state","currentCity","data","valueCity","failedToFind","onHandleCityChange","_this","fetchData","setState","event","target","preventDefault","fetch","method","headers","X-RapidAPI-Host","X-RapidAPI-Key","then","response","status","json","list","catch","err","filteredData","minTempOfDay","mainCardsArr","_this2","components_ErrorMessage_ErrorMessage","filter","Date","dt_txt","getHours","map","main","temp_min","index","dayName","imgVal","Sun","toLocaleDateString","weekday","weather","includes","Cloudy","Rain","containers_MainCard_MainCard","key","toFixed","temp_max","Fragment","components_SearchCityForm_SearchCityForm","App","containers_MainContainer_MainContainer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.801df859.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.99a9fb62.png\";","module.exports = __webpack_public_path__ + \"static/media/rain.5ebf4695.png\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.9d2b3ea1.png\";","import React from \"react\";\nimport \"./DayLabel.css\";\n\nconst DayLabel = props => {\n    return(<div className=\"dayLabel\">\n        <span>{props.day}</span>\n    </div>)\n}\n\nexport default DayLabel;","import React from \"react\";\nimport \"./WeatherImage.css\";\n\nconst WeatherImage = (props) => {\n    return(<div className=\"imgDiv\"><img className=\"imageWeather\" src={props.imageSrc} alt=\"sun\"></img></div>);\n}\n\nexport default WeatherImage;","import React from \"react\";\nimport \"./LowTemp.css\";\n\nconst LowTemp = props => {\n    return(<div className=\"lowTemp\">\n        <span>{props.lowTemp}°C</span>\n    </div>)\n}\n\nexport default LowTemp;","import React from \"react\";\nimport \"./HighTemp.css\";\n\nconst HighTemp = props => {\n    return(<div className=\"highTemp\">\n        <span>{props.highTemp}°C</span>\n    </div>)\n}\n\nexport default HighTemp;","import React from \"react\";\nimport \"./Temperatures.css\";\nimport LowTemp from \"../../components/LowTemp/LowTemp\";\nimport HighTemp from \"../../components/HighTemp/HighTemp\";\n\n\nconst Temperatures = (props) => {\n    return (\n        <div className=\"temperaturesContainer\">\n            <HighTemp highTemp={props.highTemp}/>\n            <LowTemp lowTemp={props.lowTemp}/>\n        </div>\n    )\n}\n\n\nexport default Temperatures;","import React, {Component} from \"react\";\nimport \"./MainCard.css\";\nimport DayLabel from \"../../components/DayLabel/DayLabel\";\nimport WeatherImage from \"../../components/WeatherImage/WeatherImage\";\nimport Temperatures from \"../Temperatures/Temperatures\";\n\n\nclass MainCard extends Component {\n\n\n    render(){\n        return(<div className=\"mainCard\">\n               <DayLabel day={this.props.day}></DayLabel>\n               <WeatherImage imageSrc={this.props.imageSrc}></WeatherImage>\n               <Temperatures lowTemp={this.props.lowTemp} highTemp={this.props.highTemp}/>\n        </div>)\n    }\n};\n\n\nexport default MainCard;","import React from \"react\";\nimport \"./SearchCityForm.css\";\n\nconst SearchCityForm = props => {\n    return (<form className=\"searchForm\" onSubmit={props.onSubmitCityForm} autocomplete=\"off\">\n        <label for=\"inp\" className=\"inp\">\n            <input type=\"text\" value={props.city} id=\"inp\" placeholder=\"&nbsp;\" onChange={props.handleInputChange} />\n            <span className=\"label\">Search city</span>\n            <span className=\"border\"></span>\n        </label>\n        <input type=\"submit\" value=\"Search\" />\n    </form>)\n}\n\nexport default SearchCityForm;","import React from \"react\";\n\nconst ErrorMessage = () => {\n    return (<div>\n        <p>Sorry, we can't find that city :( </p>\n    </div>)\n}\n\nexport default ErrorMessage;","import React, { Component } from \"react\";\nimport MainCard from \"../MainCard/MainCard\";\nimport Sun from \"../../assets/sun.png\";\nimport Rain from \"../../assets/rain.png\";\nimport Cloudy from \"../../assets/cloudy.png\";\nimport SearchCityForm from \"../../components/SearchCityForm/SearchCityForm\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport \"./MainContainer.css\";\n\n\nclass MainContainer extends Component {\n    state = {\n        currentCity: \"Stockholm\",\n        data: [],\n        valueCity: \"\",\n        failedToFind: false\n    }\n\n    componentDidMount() {\n        this.fetchData(this.state.currentCity);\n\n    }\n\n    onHandleCityChange = city => {\n        this.fetchData(city);\n        this.setState({ currentCity: city });\n    }\n\n    handleInputChange = (event) => {\n        this.setState({ valueCity: event.target.value });\n    }\n\n    onSubmitCityForm = event => {\n        event.preventDefault();\n        this.fetchData(this.state.valueCity);\n        this.setState({ currentCity: this.state.valueCity, valueCity: \"\" });\n    }\n\n\n    fetchData = city => {\n        fetch(\"https://community-open-weather-map.p.rapidapi.com/forecast?q=\" + city, {\n            method: \"GET\",\n            headers: {\n                \"X-RapidAPI-Host\": \"community-open-weather-map.p.rapidapi.com\",\n                \"X-RapidAPI-Key\": \"becfe1f159msh9ea62d2bcde02c5p178026jsn758bf79aeaa4\"\n            }\n        })\n            .then(response => {\n                if (response.status !== 200) {\n                    this.setState({ failedToFind: true })\n                    return;\n                }\n                return response.json()\n            })\n            .then(data =>\n                this.setState({ data: data.list, failedToFind: false })\n            ).catch(err => err);\n\n    }\n\n\n    render() {\n\n        let filteredData;\n        let minTempOfDay;\n        let mainCardsArr;\n        if (this.state.failedToFind) {\n            mainCardsArr = <ErrorMessage />\n        }\n        else {\n            filteredData = this.state.data.filter(day => {\n                let date = new Date(day.dt_txt);\n                let hour = date.getHours();\n                return hour === 12;\n            });\n\n            minTempOfDay = this.state.data.filter(day => {\n                const date = new Date(day.dt_txt);\n                const hour = date.getHours();\n                return hour === 21;\n            }).map(day => {\n                return day.main.temp_min;\n            });\n\n            mainCardsArr = filteredData.map((day, index) => {\n                let imgVal = Sun;\n                let date = new Date(day.dt_txt);\n                let dayName = \"\";\n                dayName = date.toLocaleDateString(\"en-en\", { weekday: \"short\" });\n                if (day.weather[0].main.includes(\"Clouds\")) {\n                    imgVal = Cloudy;\n                }\n                else if (day.weather[0].main.includes(\"Rain\")) {\n                    imgVal = Rain;\n                }\n                return <MainCard\n                    key={index}\n                    day={dayName}\n                    imageSrc={imgVal}\n                    lowTemp={(minTempOfDay[index] - 273.15).toFixed(0)}\n                    highTemp={(day.main.temp_max - 273.15).toFixed(0)}\n                />\n            })\n        }\n\n        return (<>\n            <h2 className=\"title\">Weather for {this.state.currentCity}</h2>\n            <div className=\"mainContainer\">\n                {mainCardsArr}\n            </div>\n            <SearchCityForm\n                city={this.state.valueCity}\n                onSubmitCityForm={event => this.onSubmitCityForm(event)}\n                handleInputChange={event => this.handleInputChange(event)}\n            />\n        </>)\n    }\n}\n\n\nexport default MainContainer;","import React, {Component} from 'react';\nimport './App.css';\nimport MainContainer from \"./containers/MainContainer/MainContainer\";\n\nclass App extends Component{\n  render(){\n    return (\n      <div className=\"App\">\n        <MainContainer/>\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}